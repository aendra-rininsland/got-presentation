<!DOCTYPE html>
<html>
<head>
	<title>bespoke-theme-voltaire</title>
	<meta name="description" content="A theme for Bespoke.js">
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
	<meta charset="utf-8">
</head>
<body>
	<article id="presentation">
		<section id="intro">
			<h1>A Song Of Ice and Data and Stuff</h1>
			<h2>Ændrew Rininsland</h2>
			<h3>
				3 August 2017,
				<a href="https://www.meetup.com/Visualising-Data-London/">
					Visualising Data London
				</a>
			</h3>
		</section>

		<section>
			<h1 class="bullet">$ whoami</h1>
			<ul>
				<li>Earlier this year I released a book about D3</li>
				<li>This included copious amounts of Game Of Thrones charts</li>
				<li>D3 is a fantastic library for doing rapid data visualisations</li>
				<li>I work on an editorial team at the Financial Times that rapidly creates charts for print and digital consumption</li>
			</ul>
		</section>

		<section>
			<h1 class="bullet">I think winter is here?</h1>
			<ul>
				<li>Game of Thrones is really pretty crazy right now</li>
				<li>We're into the second-last season</li>
				<li>Lots of plots are converging</li>
				<li>I did a lot of Game of Thrones charts in my book...</li>
			</ul>
		</section>

		<section>
			<h1>And now we're going to recreate a bunch of them in rapid-fire succession — or pay the iron price</h1>
		</section>

		<section data-bespoke-backdrop="emphatic">
			<h1>A warning: there might be spoilers if you look too closely at the data</h1>
		</section>

		<section>
			<h1>Preliminary setup</h1>
			<h2>Create a factory function that sets up everything</h2>
			<code>
export function chartFactory(selector, chart, opts = {}) {
	const wrapper = d3.select(selector); // Create selection from specified selector string
	const svg = wrapper.append('svg'); // Append a SVG element
	svg.attr('width', opts.width || wrapper.innerWidth); // Explicitly set width...
	svg.attr('height', opts.height || wrapper.innerHeight); // ...and height.
	const container = svg.append('g'); // Append a group element that will hold everything
	const margin = opts.margin || {}; // Create a default margins object, then translate container
	container.attr('transform', `translate(${margin.left || 0}, ${margin.top || 0})`);

	chart.call(container, opts); // Call the chart constructor
}
			</code>
		</section>

		<section>
			<h1>Preliminary setup</h1>
			<h2 class="bullet">I'm assuming you're using Webpack and Babel or some such</h2>
			<h2 class="bullet">A lighter solution is my SystemJS-based `d3-bootloader`, which can transpile ES6 module syntax and includes all of D3 loaded via CDN</h2>
			<h3><a href="https://www.npmjs.com/package/@financial-times/d3-bootloader">
				npmjs.com/package/@financial-times/d3-bootloader
			</a></h3>
		</section>

		<section>
			<h1>Two types of layouts in D3 v4</h1>
			<h2 class="bullet">Hierarchical</h2>
			<h2 class="bullet">Not-So-Hierarchical</h2>
		</section>

		<section>
			<h1>Two types of layouts in D3 v4</h1>
			<h2 class="bullet">Hierarchical</h2>
			<ul>
				<li>Cluster ✅</li>
				<li>Pack ✅</li>
				<li>Partition ✅</li>
				<li>Tree (dendrograph) ✅</li>
				<li>Treemap ✅</li>
			</ul>
			<h3>We're gonna do all of these because they're really similar</h3>
			<h2 class="bullet">Not-So-Hierarchical</h2>
		</section>

		<section>
			<h1>Two types of layouts in D3 v4</h1>
			<h2 class="bullet">Hierarchical</h2>
			<h2 class="bullet">Not-So-Hierarchical</h2>
			<ul>
				<li>Force-directed stuff ✅</li>
				<li>Pie charts ✅</li>
				<li>Histograms</li>
				<li>Stacked charts ✅</li>
				<li>Chord</li>
			</ul>
			<h3>We're only going to do a few of these because of time constraints</h3>
		</section>

		<section>
			<h1>About the data</h1>
			<h2>All data is available on GitHub: <br />
				<a href="https://github.com/aendrew/got-presentation">github.com/aendrew/got-presentation</a>
			</h2>
			<ul>
				<li>Dataset 1: An API of Ice and Fire (characters)
					<ul>
						<li>github.com/joakimskoog/AnApiOfIceAndFire</li>
					</ul>
				</li>
				<li>Dataset 2: Time Magazine, "Every character who has died on Game Of Thrones"
					<ul>
						<li>time.com/3924852/every-game-of-thrones-death/</li>
					</ul>
				</li>
				<li>Dataset 3: Shirin Glander, "Network analysis of Game Of Thrones family ties"
					<ul>
						<li>shiring.github.io/networks/2017/05/15/got_final</li>
					</ul>
				</li>
				<li>Dataset 4: Andrew Beveridge, Network Of Thrones
					<ul>
						<li>www.macalester.edu/~abeverid/thrones.html</li>
					</ul>
				</li>
			</ul>
		</section>
	</article>
	<!-- <article>
	<section>
	<h1>bespoke-theme-voltaire</h1>
	<ul>
	<li>A Bespoke.js theme by <a href="https://github.com/markdalgleish">Mark Dalgleish</a></li>
</ul>
</section>
<section>
<h1 class="bullet">Large Heading</h1>
<h2 class="bullet">Smaller Sub-heading</h2>
</section>
<section>
<h1 class="bullet">Unordered List</h1>
<ul>
<li>In eu diam sed mi blandit pulvinar.</li>
<li>Etiam hendrerit nunc ut tortor interdum faucibus.</li>
<li>Nulla eget nibh et enim sagittis dictum.</li>
</ul>
</section>
<section data-bespoke-backdrop="emphatic">
<h1 class="bullet">Emphatic slide</h1>
<ul>
<li>In eu diam sed mi blandit pulvinar.</li>
<li>Etiam hendrerit nunc ut tortor interdum faucibus.</li>
<li>Nulla eget nibh et enim sagittis dictum.</li>
</ul>
</section>
<section>
<h1 class="bullet">Enjoy <span class='bullet'>:)</span></h1>
</section>
</article><a href="https://github.com/markdalgleish/bespoke-theme-voltaire"><img style="position: absolute; top: 0; right: 0; border: 0; width: 25vw; max-width: 149px;" src="http://aral.github.com/fork-me-on-github-retina-ribbons/right-grey@2x.png" alt="Fork me on GitHub"></a>
<script src="build/build.js"></script> -->
</body>
</html>
